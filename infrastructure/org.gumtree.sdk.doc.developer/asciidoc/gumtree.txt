Gumtree Developer Guide
=======================
Bragg Institute <gumtree@googlegroups.com>
v1.8.0, November 2012
:toc:
:icons:
:numbered:
:doctype: book
:website: http://gumtree.codehaus.org/



///////////////////////////////////////////////////////////////////////////////
//
// PART I: OVERVIEW
//
///////////////////////////////////////////////////////////////////////////////

OVERVIEW
========

Introduction
------------

=== What is Gumtree ===
Gumtree is a software suite for managing large scale scientific instruments. Its
primary roles are:

* _Controls_ and _monitors_ an instrument system
* _Plans_ and _executes_ experiments on an instrument
* _Retrieves_ and _displays_ experiment data from the system
* _Reduces_ and _analyses_ live or archived experiment data

Gumtree runs in two forms. Firstly, the _Gumtree Workbench_ is a desktop
application that provides graphical user interface for users to interact
with a particular instrument. Gumtree workbench can be run on multiple operating
system, including _Windows_, _Linux_ and _OS X_. Secondly, the _Gumtree Server_
is a headless application that provides access to an instrument via browsers and
mobile devices.

Each Gumtree application is built upon an application framework, called the
_Gumtree Framework_. The goal of this framework is to provide developers with
solid building blocks that can be used for building high quality scientific
applications. Gumtree is an open source project and can be distributed freely
under the http://www.eclipse.org/legal/epl-v10.html[Eclipse Public License]
(EPL v1.0).

=== About This Guide ===
_Gumtree Developer Guide_ is a definitive reference for people who develop
Gumtree based applications. This book is split into the following parts:

<<_overview,Part I: Overview>>::
	A glance of the Gumtree project, design and architecture 

<<_programming_fundamentals, Part II: Programming Fundamentals>>::
	Getting started for developing applications with Gumtree  
	
<<_gumtree_framework,Part III: Gumtree Framework>>::
	In depth coverage of the Gumtree application framework

<<_bragg_extensions,Part IV: Bragg Extensions>>::
	Details on supported Bragg Institute instruments

<<_advanced_topics,Part V: Advanced Topics>>::
	Advanced topics on build system and software maintenance



Gumtree Project Overview
------------------------

=== Project Structure ===
The http://gumtree.codehaus.org[_Gumtree Project_] is an open source project
hosted on the http://www.codehaus.org/[_Codehaus_] website. It is
financially sponsored by the http://www.ansto.gov.au/[_Australian Nuclear
Science and Techology Organisation_] (ANSTO), for its use on a number of
neutron scattering instruments near the
http://www.ansto.gov.au/discovering_ansto/anstos_research_reactor[_OPAL research reactor_]. 

The development of Gumtree follows the agile principle: _"release early, release
often"_, where shippable quality software is delivered every couple of weeks for
public testing and review.

=== Project Resources ===
The following links are useful online resources for the Gumtree Project:

* *Home Page* - http://gumtree.codehaus.org
* *Download Site* - http://gumtree.codehaus.org/downloads
* *Git Repository* - https://github.com/Gumtree/gumtree
* *Issue Tracking System* - http://jira.codehaus.org/browse/GUMTREE
* *Site Management* - http://xircles.codehaus.org/projects/gumtree
* *Mailing List* - gumtree@googlegroups.com
* *Mail Archive* - https://groups.google.com/forum/?fromgroups#!forum/gumtree



Requirement Analysis
--------------------

=== High Level Requirements ===
The design of Gumtree should meet the following requirements:

* *Instrument control* - The top requirement for Gumtree is the ability to drive
an instrument via a dedicated instrument control system.
* *Data Access* - Gumtree should provide a user friendly way to retrieve data
from various sources, for example, local file system, devices or the cloud.
* *Data visualisation* - Gumtree should be able to visualise data either from
the live system or data files.
* *Data reduction support* - Gumtree should be capable of providing mathematical
package to process live data or archived data in a efficient way.
* *Simple user interface* - The front end of the system, either in desktop,
mobile or web mode, needs to be simple.
* *Scripting support* - Scripting helps users to perform operations in an
automated fashion, for example, users can write a single script to automate
instrument control and data reduction as a same time. Gumtree should allow
scripts to be run locally on a workbench or remotely on a server.
* *Persistence and crash recovery* - Gumtree should recover automatically in
the event of application crash. This is done by local persistence of application
state and reload from persistence when Gumtree is restarted.
* *Remote access* - Remote access allows users to monitor the instrument status
anywhere in the world. However, Gumtree does not intent to provide full remote
access for instrument control outside of the facility.
* *Configurable* - Each application can be configured by user defined setting or
from a central configuration server. Instrument scientists and supporting
staffs can update the entries from the configuration server to change the
behaviour of those applications. Users may also be able to upload their
configuration to the server to sync between different instance of Gumtree.
* *Access control* - The application may limit its feature based on the role of
a user who has signed to the system.
* *Connectivity with other online services* - Gumtree should leverage other
services available from the instrument system, and provide add-on value by
mashing up services.
* *Support for rapid development* - Gumtree should be designed by using modern
software engineering techniques, such that code is more maintainable and
reusable.

=== Domain Analysis ===
The essential entity of this model is experiment. In a typical experiment, a
user plans a sequence of instructions to control devices managed by control
systems.  An experiment may also require additional metadata from various
sources for auditing purpose.  Once an experiment is executed, those control
systems will create raw data for further reduction.  Experiment can be optimised
by using this reduced data to make intelligent decision for the next step of the
experiment.

.Domain Model
image::./images/Domain_Model.png[Domain Model]

=== System Analysis ===
Gumtree adopts the client-server model for distributed instrument control. In a
typical instrument system, there are a number of physical devices controlled by
a central sequencer via some kind of control system software stack. Along with
a centralised server, there are also a number of facility servers like
database and access control which provide additional non-control system related
services. From the user frontend, there are different computation devices for
accessing servers available in an instrument system. Gumtree fills in the gap
between the users and the instrument system.

.System Architecture
image::./images/System_Architecture.png[System Architecture]

Architectural Design
--------------------

=== Architecture Overview ===
* 

=== Programming Principles ===

=== Application Layers ===
* Application structure

=== Software Components ===
* What components are available in the application 

=== Artifact Products ===
* What do we build for Gumtree based system



///////////////////////////////////////////////////////////////////////////////
//
// PART II: PROGRAMMING FUNDAMENTALS
//
///////////////////////////////////////////////////////////////////////////////

PROGRAMMING FUNDAMENTALS
========================

Software Development Model
--------------------------

=== Extending Existing Application ===

=== Developing New Application ===

=== Framework Development ===

Development Environment Setup
-----------------------------

///////////////////////////////////////////////////////////////////////////////
//
// PART III: GUMTREE FRAMEWORK
//
///////////////////////////////////////////////////////////////////////////////

GUMTREE FRAMEWORK
=================

Gumtree Framework Overview
--------------------------

Core Services
-------------



///////////////////////////////////////////////////////////////////////////////
//
// PART IV: BRAGG EXTENSIONS
//
///////////////////////////////////////////////////////////////////////////////

BRAGG EXTENSIONS
================

Bragg Extensions Overview
-------------------------

NBI Common Library
------------------

Echidna Instrument Support
--------------------------

Ecdina is a High-Resolution Powder Diffractometer

Wombat Instrument Support 
--------------------------

Wombat is a High-Intensity Powder Diffractometer

Kowari Instrument Support
-------------------------

Kowari is a Strain Scanner

Quokka Instrument Support
-------------------------

Quokka is a Small-Angle Neutron Scattering Instrument

Platypus Instrument Support
---------------------------

Platypus is a Neutron Reflectometer

Pelican Instrument Support
--------------------------

Pelican is a Time-of-Flight Spectrometer

Taipan Instrument Support 
-------------------------

Taipan is a Thermal 3-Axis Spectrometer

Kookaburra Instrument Support
-----------------------------

Kookaburra is a  Ultra Small Angle Scattering

Bilby Instrument Support
------------------------

Bilby is a Small-Angle Neutron Scattering Instrument

Dingo Instrument Support
------------------------

Dingo is a Radiography/Tomography/Imaging Station

Emu Instrument Support
----------------------

Emu is a High-Resolution Backscattering Spectrometer



///////////////////////////////////////////////////////////////////////////////
//
// PART V: ADVANCED TOPICS
//
///////////////////////////////////////////////////////////////////////////////

ADVANCED TOPICS
===============

[[GumtreePlatformDevelopment]]
Gumtree Platform Development
----------------------------

Maven Build System
------------------

Tycho Reference Card - http://wiki.eclipse.org/Tycho/Reference_Card
Eclipse Tycho - Tutorial for building Eclipse Plugins and RCP applications - http://www.vogella.com/articles/EclipseTycho/article.html


Release Engineering
-------------------

Continuous Build System
-----------------------




Online Resources
----------------

Java
The Java Tutorials (Oracle) - http://docs.oracle.com/javase/tutorial/

SWT
SWT Snippets - http://www.eclipse.org/swt/snippets/

Eclipse
Vogella tutorial on Eclipse - http://www.vogella.com/eclipse.html





