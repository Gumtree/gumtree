<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:gum="org.gumtree.flex.*"
	horizontalAlign="center"
	backgroundColor="0x000000"
	creationComplete="init()" verticalAlign="middle">
	
	<!-- Scripts -->
	<mx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.adobe.serialization.json.JSONDecoder;
			import flash.events.TimerEvent;
			import flash.utils.Timer;
            import mx.collections.ArrayCollection;
            import mx.controls.TextArea;
            import mx.managers.BrowserManager;
			import mx.managers.IBrowserManager;
			import mx.messaging.channels.SecureAMFChannel;
			import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;

	        private var bm:IBrowserManager;
            
            private static var serverURL:String = "";
            
			private var timer:Timer;
			// hdb (devices) - widget maping
			private var hdbDeviceMap:Array;
			// hdb (components) - widget maping
			private var hdbComponentMap:Array;
			
			private function init():void {
				
				bm = BrowserManager.getInstance();
        	    bm.init("", "Dingo - Radiography/Tomography/Imaging Station");
				
				// Set HDB HTTP
				hdbDeviceMap = ["cm1_mode", modeNode,
				"cm1_preset", presetNode,
				"cm1_time", timeOfCounting,
				"cm1_counts", cm1Counts,
				"dy", dyMotor,
				"stth", stthMotor,
				"sx", sxMotor,
				"sy", syMotor,
				"sz", szMotor,
				"dz", dzMotor,
				"at", atMotor,
				"plc_secondary", secondaryShutter,
				"plc_tertiary", sampleShutter
				];
				
				var url:String = serverURL + "sics/rest/hdbs?devices=";
				var tempString:String = "";
				for (var i:int = 0; i < hdbDeviceMap.length; i += 2)
            	{
            		tempString += hdbDeviceMap[i];
            		if (i != hdbDeviceMap.length - 2) {
            			tempString += ",";	
            		}
            	}
            	tempString = encodeURIComponent(tempString);
            	url += tempString + "&format=json";
            	httpServiceForHdb.url = url;
            	
            	
            	// Set Server HTTP
         		httpServiceForServer.url = serverURL + "sics/rest/status";
         		
         		// Set HM URL
         		hmImage.url = serverURL + "dae/rest/image?type=TOTAL_HISTOGRAM_XY&screen_size_x=760&screen_size_y=760";
         		
         		// Update once
         		updateTimer(null);
         		
            	// Setup timer
				triggerTimer();
			}
            

            private function triggerTimer():void
            {
            	if (timerCheckBox.selected == true)
            	{
            		if (timer == null)
            		{
            			// Default timer with 1 sec interval
            			timer = new Timer(1000);
            			timer.addEventListener(TimerEvent.TIMER, updateTimer);
            			// Then adjust delay based on setting
            			changeTimerDelay();
            		}
            		timer.start();
            	}
            	else {
            		timer.stop();
            	}
            }
            
            private function updateTimer(evt:TimerEvent):void
            {
            	// Update HDB data
            	httpServiceForHdb.send();
            	// Update server data
            	httpServiceForServer.send();
            	// Update HM data
				hmImage.update();
            }
			
			private function changeTimerDelay():void
			{
				if (timer != null)
            	{
            		timer.delay = timerStepper.value * 1000;
            	}
			}
			
			private function handleHdbData(event:ResultEvent):void
			{
				//get the raw JSON data and cast to String
				var rawData:String = String(event.result);
				var result:Object = JSON.decode(rawData);
				var dataArray:Array = result.hdbs as Array;
				for (var i:int = 0; i < dataArray.length; i++) {
					var deviceName:String = dataArray[i].deviceId;
					// device
					if (deviceName != null)
					{
						var index:int = hdbDeviceMap.indexOf(deviceName);
						if (index >= 0)
						{
							var textArea:TextArea = hdbDeviceMap[index + 1] as TextArea; 
							textArea.text = dataArray[i].value;
						}
						if (deviceName == "plc_secondary") {
							handleSecondaryShutter(dataArray[i].value);
						}
						if (deviceName == "plc_tertiary") {
							handleSampleShutter(dataArray[i].value);
						}
						
					}
					// component
					else
					{
						var path:String = dataArray[i].path;
						var componentIndex:int = hdbComponentMap.indexOf(path);
						if (componentIndex >= 0)
						{
							var componentTextArea:TextArea = hdbComponentMap[componentIndex + 1] as TextArea; 
							componentTextArea.text = dataArray[i].value;
						}	
					}
				}
				
				// Update time
				lastUpdate.text = "Last update: " + dateFormatter.format(new Date());
				connectionStatus.text = "OK";
				connectionStatus.setStyle("backgroundColor", "#00c400");
			}
			
//			private function handleServerData(event:ResultEvent):void
//			{
//				var rawData:String = String(event.result);
//				var result:Object = JSON.decode(rawData);
//				if (result.status == "CONNECTED") {
//					serverStatus.text = "Online";
//					serverStatus.setStyle("backgroundColor", "#00c400");
//				} else  {
//					serverStatus.text = "Offline";
//					serverStatus.setStyle("backgroundColor", "#c40000");
//					initText();
//				}
//			}
			private function handleServerData(event:ResultEvent):void
			{
				var rawData:String = String(event.result);
				var result:Object = JSON.decode(rawData);
//				if (result.status == "CONNECTED") {
//					serverStatus.text = "Online";
//					serverStatus.setStyle("backgroundColor", "#00c400");
//				} else  {
//					serverStatus.text = "Offline";
//					serverStatus.setStyle("backgroundColor", "#c40000");
//					initText();
//				}
				serverStatus.text = result.status
				if (result.status == "EAGER TO EXECUTE") {
					serverStatus.setStyle("backgroundColor", "#00c400");
				} else if (result.status == "COUNTING" || result.status == "WAIT" || result.status == "DRIVING") {
					serverStatus.setStyle("backgroundColor", "#FFA500");
				} else if (result.status == "PAUSED") {
					serverStatus.setStyle("backgroundColor", "#0000c4");
				} else  {
					serverStatus.text = "DISCONNECTED";
					serverStatus.setStyle("backgroundColor", "#c40000");
					initText();
				}
			}
			
			private function handleFault(event:FaultEvent):void
			{
				connectionStatus.text = "Fault";
				connectionStatus.setStyle("backgroundColor", "#c40000");
				serverStatus.text = "--";
				serverStatus.setStyle("backgroundColor", "#000000");
				//to do. put -- in all text fields.
				initText();
			}
			
			private function handleSampleShutter(status:String):void
            {
            	if (status == "OPEN") {
               		sampleShutter.setStyle("backgroundColor", "#c40000");
            	}
            	else {
            		sampleShutter.setStyle("backgroundColor", "#00c400");
            	}
            } 
            
            private function handleSecondaryShutter(status:String):void
            {
            	if (status == "OPEN") {
               		secondaryShutter.setStyle("backgroundColor", "#c40000");
            	}
            	else {
            		secondaryShutter.setStyle("backgroundColor", "#00c400");
            	}
            }
            
            private function initText():void {
            	var j:int = hdbDeviceMap.length;
				for (var i:int = 0; i < j; i+=2) {
					var textArea:TextArea = hdbDeviceMap[i+1] as TextArea; 
					textArea.text = "--";
					textArea.setStyle("backgroundColor", "#000000");
				}
            } 
			
		]]>
	</mx:Script>
	
	<!-- Services -->
	<mx:HTTPService id="httpServiceForHdb" resultFormat="text" result="handleHdbData(event)" fault="handleFault(event)" />
	<mx:HTTPService id="httpServiceForServer" resultFormat="text" result="handleServerData(event)" fault="handleFault(event)"/>
	<mx:DateFormatter id="dateFormatter" formatString="YYYY-MM-DD HH:NN:SS A" />
	
	<!-- Effects -->
	<mx:WipeDown id="wipeIn" duration="1000"/>
	<mx:Dissolve id="dissolveIn" duration="1500" alphaFrom="0.0" alphaTo="1.0"/>
	
	<mx:Panel title="Dingo - Radiography/Tomography/Imaging Station"
        width="1000" height="640" horizontalAlign="center" verticalAlign="top" fontSize="18" fontWeight="normal" backgroundColor="#000000" color="#FFFFFF" borderColor="#90CCFB" alpha="1.0" cornerRadius="3" layout="absolute">
 
 		<!-- Histogram image -->
 		<gum:ImageView id="hmImage" width="480" height="320" left="60" bottom="120"/>

 		<!-- Instrument schematic -->

		<mx:Panel width="308" height="360"
			title="Instrument Configuration" fontSize="12" borderColor="#FFFFFF" alpha="1.0"
			borderStyle="solid" backgroundColor="#000000" borderThickness="2"
			cornerRadius="6" creationCompleteEffect="{wipeIn}" x="662" y="178">
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="dy" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="dyMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="mm"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%" borderStyle="none">
				<mx:GridRow width="100%">
					<mx:GridItem width="100%">
						<mx:Label fontWeight="bold" text="Sample Stage" textAlign="left" width="100%"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="stth" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="stthMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="deg"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="sx" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="sxMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="mm"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="sy" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="syMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="mm"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="sz" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="szMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="mm"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="dz" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="dzMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="mm"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="at" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="atMotor" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="100"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:Label text="deg"  width="30"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
		</mx:Panel>
		<mx:Panel width="308" height="146"
			title="Server Status" fontSize="12" borderColor="#FFFFFF" alpha="1.0"
			borderStyle="solid" backgroundColor="#000000" borderThickness="2"
			cornerRadius="6" creationCompleteEffect="{wipeIn}" x="662" y="10">
			<mx:Grid width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="Connection" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="connectionStatus" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="140"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="SICS Server" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="serverStatus" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="140"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="Secondary Shutter" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="secondaryShutter" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="140"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="50%">
						<mx:Label text="Sample Shutter" textAlign="right" width="100%"/>
					</mx:GridItem>
					<mx:GridItem>
						<mx:TextArea id="sampleShutter" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="140"/>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
		</mx:Panel>
		<mx:Panel horizontalGap="0" width="559" height="146"
			title="Camera Status" fontSize="12" borderColor="#FFFFFF" alpha="1.0"
			borderStyle="solid" backgroundColor="#000000" borderThickness="2"
			cornerRadius="4" creationCompleteEffect="{wipeIn}" x="50" y="10">
			<mx:Grid width="100%">
				<mx:GridRow width="100%" height="100%">
					<mx:GridItem width="100%" height="100%">
						<mx:Grid>
							<mx:GridRow width="100%">
								<mx:GridItem width="55%">
									<mx:Label text="Mode" textAlign="right" width="100%"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:TextArea id="modeNode" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="70"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:Label text="" width="40"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow width="100%">
								<mx:GridItem width="55%">
									<mx:Label text="CM1 Counts" textAlign="right" width="100%"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:TextArea id="cm1Counts" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="70"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:Label text="c"  width="50"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</mx:GridItem>
					<mx:GridItem width="100%" height="100%">
						<mx:Grid>
							<mx:GridRow width="100%">
								<mx:GridItem width="55%">
									<mx:Label text="Preset" textAlign="right" width="100%"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:TextArea id="presetNode" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="70"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:Label text=""  width="40"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow width="100%">
								<mx:GridItem width="55%">
									<mx:Label text="Time of Counting" textAlign="right" width="100%"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:TextArea id="timeOfCounting" text="--" editable="false" height="20" borderStyle="solid" backgroundColor="#000000" textAlign="right" width="70"/>
								</mx:GridItem>
								<mx:GridItem>
									<mx:Label text="s"  width="50"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
		</mx:Panel>
        
        <!-- Update control -->
		<mx:ControlBar>
            <mx:Label id="lastUpdate" fontSize="12" text="Last updated:"/>
            <mx:Spacer width="100%"/>
            <mx:CheckBox id="timerCheckBox" fontSize="12" selected="true" click="triggerTimer()"/>
            <mx:Label text="Auto refresh in every" fontSize="12"/>
            <mx:NumericStepper id="timerStepper" fontSize="12" color="#000000" value="10" change="changeTimerDelay()"/>
            <mx:Label text="sec" fontSize="12"/>
            <!-- Use Spacer to push Button control to the right. -->
        </mx:ControlBar>
        
    </mx:Panel>
    
</mx:Application>
